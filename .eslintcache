[{"/home/ubantu/Desktop/coditation/CieScaffolding/src/index.tsx":"1","/home/ubantu/Desktop/coditation/CieScaffolding/src/serviceWorker.ts":"2","/home/ubantu/Desktop/coditation/CieScaffolding/src/redux-setup/store.ts":"3","/home/ubantu/Desktop/coditation/CieScaffolding/src/redux-setup/history.ts":"4","/home/ubantu/Desktop/coditation/CieScaffolding/src/components/Logger.tsx":"5","/home/ubantu/Desktop/coditation/CieScaffolding/src/components/Routes/PrivateRoute.tsx":"6","/home/ubantu/Desktop/coditation/CieScaffolding/src/redux-setup/rootReducer.ts":"7","/home/ubantu/Desktop/coditation/CieScaffolding/src/redux-middlewares-enhancers/token-middleware.ts":"8","/home/ubantu/Desktop/coditation/CieScaffolding/src/components/Maps/index.tsx":"9","/home/ubantu/Desktop/coditation/CieScaffolding/src/pages/login/index.tsx":"10","/home/ubantu/Desktop/coditation/CieScaffolding/src/components/Header/MainHeader/index.tsx":"11","/home/ubantu/Desktop/coditation/CieScaffolding/src/pages/consumer/index.tsx":"12","/home/ubantu/Desktop/coditation/CieScaffolding/src/pages/login/styles.ts":"13","/home/ubantu/Desktop/coditation/CieScaffolding/src/components/Header/MainHeader/styles.ts":"14","/home/ubantu/Desktop/coditation/CieScaffolding/src/components/Header/SubHeader/index.tsx":"15","/home/ubantu/Desktop/coditation/CieScaffolding/src/components/Header/SubHeader/style.ts":"16","/home/ubantu/Desktop/coditation/CieScaffolding/src/features/login-flow/index.tsx":"17","/home/ubantu/Desktop/coditation/CieScaffolding/src/features/login-flow/login-thunks.tsx":"18","/home/ubantu/Desktop/coditation/CieScaffolding/src/features/login-flow/login-slice.tsx":"19","/home/ubantu/Desktop/coditation/CieScaffolding/src/services/login-service.ts":"20","/home/ubantu/Desktop/coditation/CieScaffolding/src/features/login-flow/login-initial-state.tsx":"21","/home/ubantu/Desktop/coditation/CieScaffolding/src/interceptors/axiosConfig.ts":"22","/home/ubantu/Desktop/coditation/CieScaffolding/src/constants/app-config-constants.ts":"23"},{"size":1636,"mtime":1610352400504,"results":"24","hashOfConfig":"25"},{"size":5424,"mtime":1610082288565,"results":"26","hashOfConfig":"25"},{"size":2004,"mtime":1610352268105,"results":"27","hashOfConfig":"25"},{"size":105,"mtime":1610082288565,"results":"28","hashOfConfig":"25"},{"size":2661,"mtime":1610082288557,"results":"29","hashOfConfig":"25"},{"size":677,"mtime":1610082288557,"results":"30","hashOfConfig":"25"},{"size":300,"mtime":1610082288565,"results":"31","hashOfConfig":"25"},{"size":519,"mtime":1610082288565,"results":"32","hashOfConfig":"25"},{"size":17050,"mtime":1610713210119,"results":"33","hashOfConfig":"25"},{"size":3667,"mtime":1610082288561,"results":"34","hashOfConfig":"25"},{"size":2259,"mtime":1610082294637,"results":"35","hashOfConfig":"25"},{"size":453,"mtime":1610082294637,"results":"36","hashOfConfig":"25"},{"size":2705,"mtime":1610082288565,"results":"37","hashOfConfig":"25"},{"size":2194,"mtime":1610082294637,"results":"38","hashOfConfig":"25"},{"size":3143,"mtime":1610082294637,"results":"39","hashOfConfig":"25"},{"size":2843,"mtime":1610082294637,"results":"40","hashOfConfig":"25"},{"size":238,"mtime":1610082288557,"results":"41","hashOfConfig":"25"},{"size":837,"mtime":1610082288561,"results":"42","hashOfConfig":"25"},{"size":960,"mtime":1610082288561,"results":"43","hashOfConfig":"25"},{"size":385,"mtime":1610082288565,"results":"44","hashOfConfig":"25"},{"size":184,"mtime":1610082288557,"results":"45","hashOfConfig":"25"},{"size":712,"mtime":1610082288561,"results":"46","hashOfConfig":"25"},{"size":141,"mtime":1610712906174,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},"1yygjbw",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"51"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"51"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"51"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"51"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"51"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"51"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"51"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"51"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"51"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ubantu/Desktop/coditation/CieScaffolding/src/index.tsx",["105","106"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nimport storeConfig from \"./redux-setup/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport Login from \"./pages/login\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport { ConnectedRouter as Router } from \"connected-react-router\";\r\nimport history from \"./redux-setup/history\";\r\nimport PrivateRoute from \"./components/Routes/PrivateRoute\";\r\nimport Logger from \"./components/Logger\";\r\nimport MainHeader from \"./components/Header/MainHeader\";\r\nimport SubHeader from \"components/Header/SubHeader\";\r\nimport Consumer from \"pages/consumer\";\r\nimport Maps from \"./components/Maps\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={storeConfig.store}>\r\n      <PersistGate loading={null} persistor={storeConfig.persistor}>\r\n      <Router history={history}>\r\n        <Logger>\r\n          <Route exact path=\"/login\">\r\n            <Login />\r\n          </Route>\r\n          <PrivateRoute\r\n            exact\r\n            path=\"/consumer\"\r\n            component={Consumer}\r\n          ></PrivateRoute>\r\n          <Route exact path=\"/competitor\" style={{ overflow: \"hidden\" }}>\r\n            {/* <Login /> */}\r\n            <MainHeader />\r\n            <SubHeader></SubHeader>\r\n            <Maps></Maps>\r\n          </Route>\r\n        </Logger>\r\n      </Router>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();\r\n",["107","108"],"/home/ubantu/Desktop/coditation/CieScaffolding/src/serviceWorker.ts",[],"/home/ubantu/Desktop/coditation/CieScaffolding/src/redux-setup/store.ts",["109"],"import {createStore,applyMiddleware} from '@reduxjs/toolkit';\nimport {routerMiddleware} from 'connected-react-router';\nimport rootReducer from './rootReducer'\nimport history from './history';\nimport thunk from \"redux-thunk\";\nimport {createLogger} from 'redux-logger';\nimport tokenMiddleware from '../redux-middlewares-enhancers/token-middleware'\nimport Logger from '../components/Logger'\nimport {persistReducer, persistStore} from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nconst Tlogger=createLogger({\n    predicate:(getState ,action)=>\n    {\n         return true\n    },\n    level:(data,...temp)=>{\n        console.log(\"level\",data,temp);\n        return \"info\";\n    },\n    stateTransformer:(state)=>{\n        switch(state.type){\n            case \"@@router/LOCATION_CHANGE\":\n                return state.router;\n            default:\n                return state;\n        }\n    },\n    actionTransformer:(action)=>{\n        switch(action.type){\n            case \"@@router/LOCATION_CHANGE\":\n                return {\n                    type:action.type,\n                    action:action.payload.action,\n                    path:action.payload.location.path\n                };\n            default:\n                return action;\n        }\n    },\n    diffPredicate:(getState,action)=>{\n        console.log(\"diffPred\",getState(),action);\n        return true;\n    },\n    collapsed:(getState,action)=>{\n        console.log(action.type);\n        return true;\n    },\n    logger:{\n        log:console.log,\n        info:console.info\n    }\n}) \nconst LoggerMiddlwareCustom=(store: any)=>(next: any)=>(action: any)=>{\n    Logger.log({LogType:\"ReduxAction\",logData:action})\n    next(action);\n}\nconst persistConfig={\n    key:'root',\n    storage\n}\nconst store=createStore(\n    persistReducer(persistConfig,rootReducer),\n    applyMiddleware(routerMiddleware(history),thunk , tokenMiddleware ,LoggerMiddlwareCustom)\n)\nconst storeConfig={store,persistor:persistStore(store)}\nexport default storeConfig;\n","/home/ubantu/Desktop/coditation/CieScaffolding/src/redux-setup/history.ts",[],"/home/ubantu/Desktop/coditation/CieScaffolding/src/components/Logger.tsx",["110"],"import React from 'react';\nimport axios from 'axios';\nconst env=process.env.REACT_ENV;\nconst Context= React.createContext({default:null,log:console.log});\nexport { Context};\nclass Logger extends React.Component<any,{}>{\n    constructor(props:any){\n        super(props)\n        this.state={\n            data:{}\n        }\n    }\n    componentDidMount(){\n       \n    }\n    componentDidUpdate(){\n       \n    }\n    static writeToServer=async(config: any)=>{\n        try{\n            const response = await axios(config);\n        }catch(e){\n            return {error:e.message};\n        }\n        return true;\n    }\n\n    static processReduxAction=(action:any)=>{\n        let data;\n        switch(action.type){\n            default:\n                data=action;\n        }\n        return {level:\"info\",data};\n    }\n    static processError=(error:any)=>{\n        let data=error;\n        return {level:\"error\",data};\n    }\n\n    static processNetwork=(networkConfig:any)=>{\n        if(networkConfig.type === \"request\")\n            return networkConfig;\n        const data:any= {\n            url:networkConfig.url,\n            status:networkConfig.status,\n        }\n        if(networkConfig.data)\n            data.data=networkConfig.data;\n        if(networkConfig.error)\n            data.error=networkConfig.error;\n        return {level:\"info\",data};\n    }\n    static processData=(data:any)=>{\n        switch(data.LogType){\n            case \"ReduxAction\":\n                return Logger.processReduxAction(data.logData);\n            case \"Network\":\n                return Logger.processNetwork(data.logData);\n            case \"Error\":\n            default:\n                return Logger.processError(data.logData);\n        }\n    }\n     \n    static writeToConsole=(data:{level?:string,data:any})=>{\n        let  level:\"error\"|\"warn\"|\"info\"|\"log\";\n        level=data.level as unknown as typeof level;\n        level=level || \"log\";\n        console.groupCollapsed();\n        console[level](data.data);\n        console.groupEnd();\n    }\n    static log=(data:any)=>{\n        if(env===\"production\")\n            return;\n        const processedData=Logger.processData(data);\n        Logger.writeToConsole(processedData);\n    }\n    \n    render(){\n        const{children,...directProps}=this.props;\n        return(\n            <Context.Consumer>\n                {(ContextProps)=>{\n                    const props={...ContextProps,...directProps,log:Logger.log};\n                    return(\n                    <Context.Provider value={props}>{children}</Context.Provider>\n                    );\n                }}\n            </Context.Consumer>\n        );\n    }\n}\n\nexport default  Logger","/home/ubantu/Desktop/coditation/CieScaffolding/src/components/Routes/PrivateRoute.tsx",[],"/home/ubantu/Desktop/coditation/CieScaffolding/src/redux-setup/rootReducer.ts",[],"/home/ubantu/Desktop/coditation/CieScaffolding/src/redux-middlewares-enhancers/token-middleware.ts",[],"/home/ubantu/Desktop/coditation/CieScaffolding/src/components/Maps/index.tsx",["111","112"],"/home/ubantu/Desktop/coditation/CieScaffolding/src/pages/login/index.tsx",["113","114","115","116"],"/* eslint-disable @typescript-eslint/no-unused-expressions */\nimport React, { createRef, ReactElement, RefObject, useContext } from \"react\";\nimport { connect } from \"react-redux\";\nimport { authenticate } from \"../../features/login-flow\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { ThunkDispatch } from \"@reduxjs/toolkit\";\nimport { Context } from \"../../components/Logger\";\nimport {\n  Button,\n  CustomButton,\n  LoginPageContainer,\n  LoginForm,\n  InfoDiv,\n  CieTitle,\n  CieTitleName,\n  CieSubParagraph,\n  CieFooter,\n  SignInTitle,\n  SignInSubPagragraph,\n  LoginFormPasswordLabel,\n  LoginPageTextBox,\n  ForgotPasswordLink,\n} from \"./styles\";\n\nimport { Form, Image } from \"react-bootstrap\";\nimport Logo from \"../../assets/images/logo.png\";\n\ninterface LoginProps {}\ninterface DispatchProps {\n  login: (obj: object) => void;\n}\ntype Props = LoginProps & DispatchProps;\n// eslint-disable-next-line no-empty-pattern\n\nfunction Login(props: Props): ReactElement {\n  const history = useHistory();\n  const Logger = useContext(Context);\n  let location = useLocation();\n  const nameRef: RefObject<HTMLInputElement> = createRef();\n  const passwordRef: RefObject<HTMLInputElement> = createRef();\n  const { login } = props;\n  function onClickHandler(e: React.MouseEvent<any, any>): void {\n    e.preventDefault();\n    const username = nameRef.current?.value;\n    const password = passwordRef.current?.value;\n    login({ username, password });\n    // console.log(\"In the login:\" + JSON.stringify(history));\n  }\n  return (\n    <div className=\"container-fluid\">\n      <LoginPageContainer>\n        <InfoDiv md={5}>\n          <div>\n            <Image\n              src={Logo}\n              style={{ marginLeft: \"4rem\", marginTop: \"1rem\" }}\n            />\n          </div>\n          <CieTitle>\n            <CieTitleName>Consumer Insight explorer</CieTitleName>\n            <CieSubParagraph>\n              Better understand customer segments in terms of their location,\n              demographics, wealth, life, stage, online and offline behavior\n            </CieSubParagraph>\n            <CieFooter>© 2020 ADA</CieFooter>\n          </CieTitle>\n        </InfoDiv>\n\n        <LoginForm md={7}>\n          <Form onSubmit={onClickHandler} style={{ width: \"80%\" }}>\n            <SignInTitle>Sign In</SignInTitle>\n            <SignInSubPagragraph>\n              Enter your credentials to get access\n            </SignInSubPagragraph>\n\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>Username</Form.Label>\n              <LoginPageTextBox\n                type=\"text\"\n                ref={nameRef}\n                placeholder=\"Username\"\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n              <LoginFormPasswordLabel>\n                Password:\n                <ForgotPasswordLink href=\"www.google.com\">\n                  Click here\n                </ForgotPasswordLink>\n                <LoginPageTextBox\n                  type=\"password\"\n                  placeholder=\"password\"\n                  ref={passwordRef}\n                />\n              </LoginFormPasswordLabel>\n            </Form.Group>\n\n            <Button buttonColor={\"#fdb934\"} type=\"submit\">\n              Login\n            </Button>\n          </Form>\n        </LoginForm>\n      </LoginPageContainer>\n    </div>\n  );\n}\nfunction mapStateToProps(): LoginProps {\n  return {};\n}\nfunction mapDispatchToProps(\n  dispatch: ThunkDispatch<{}, {}, any>\n): DispatchProps {\n  return {\n    login: (obj: object) => {\n      dispatch(authenticate(obj));\n    },\n  };\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","/home/ubantu/Desktop/coditation/CieScaffolding/src/components/Header/MainHeader/index.tsx",["117","118"],"import React, { ReactElement, useState } from \"react\";\nimport Logo from \"./../../../assets/images/logo.png\";\nimport { Image, Dropdown } from \"react-bootstrap\";\nimport {\n  CieHeader,\n  HeaderContainer,\n  UserDropdown,\n  HeaderOptions,\n  ConsumerInsightTitle,\n  UserDropdownMenu,\n  LogoutCustomTitle,\n  UserDropdownMenuOptions,\n  CustomDropdownToggle,\n} from \"./styles\";\n\nimport { connect } from \"react-redux\";\n\nimport { useHistory } from \"react-router\";\ninterface HeaderProps {\n  path: string;\n}\n\nfunction mapStateToProps({ router: { location } }: any) {\n  return {\n    path: location.pathname,\n  };\n}\n\nconst MainHeader: React.FunctionComponent<HeaderProps> = ({\n  path,\n}: HeaderProps): ReactElement => {\n  const history = useHistory();\n  function navigate(location: string) {\n    if (\"/\" + location !== path) history.push(location);\n  }\n  return (\n    <HeaderContainer>\n      <CieHeader>\n        <Image src={Logo} style={{ marginLeft: \"4rem\" }} />\n\n        <UserDropdown>\n          <CustomDropdownToggle id=\"dropdown-basic\">\n            Username\n          </CustomDropdownToggle>\n\n          <UserDropdownMenu>\n            <UserDropdownMenuOptions onClick={navigate.bind(null, \"admin\")}>\n              Admin\n            </UserDropdownMenuOptions>\n            <UserDropdownMenuOptions href=\"#/action-2\">\n              Help\n            </UserDropdownMenuOptions>\n            <LogoutCustomTitle href=\"#/action-3\">LogOut</LogoutCustomTitle>\n          </UserDropdownMenu>\n        </UserDropdown>\n        <HeaderOptions>\n          <ConsumerInsightTitle\n            selected={path === \"/consumer\"}\n            onClick={navigate.bind(null, \"consumer\")}\n          >\n            Consumer Insights\n          </ConsumerInsightTitle>\n          <ConsumerInsightTitle\n            selected={path === \"/competitor\"}\n            onClick={navigate.bind(null, \"competitor\")}\n          >\n            Comptitors Insights\n          </ConsumerInsightTitle>\n          <ConsumerInsightTitle\n            selected={path === \"/audience\"}\n            onClick={navigate.bind(null, \"audience\")}\n          >\n            Audience\n          </ConsumerInsightTitle>\n        </HeaderOptions>\n      </CieHeader>\n    </HeaderContainer>\n  );\n};\n\nexport default connect(mapStateToProps)(MainHeader);\n","/home/ubantu/Desktop/coditation/CieScaffolding/src/pages/consumer/index.tsx",["119"],"import React, { ReactElement } from \"react\";\nimport { container } from \"./style\";\nimport MainHeader from \"../../components/Header/MainHeader\";\nimport SubHeader from \"../../components/Header/SubHeader\";\n\nimport Maps from \"components/Maps\";\nconst Consumer: React.FunctionComponent<{}> = (props: {}): ReactElement => {\n  return (\n    <div>\n      <MainHeader />\n      <SubHeader></SubHeader>\n      <Maps></Maps>\n    </div>\n  );\n};\n\nexport default Consumer;\n","/home/ubantu/Desktop/coditation/CieScaffolding/src/pages/login/styles.ts",[],"/home/ubantu/Desktop/coditation/CieScaffolding/src/components/Header/MainHeader/styles.ts",[],"/home/ubantu/Desktop/coditation/CieScaffolding/src/components/Header/SubHeader/index.tsx",["120","121","122","123","124","125","126","127","128","129"],"import React, { ReactElement, useState } from \"react\";\nimport {\n  Row,\n  Col,\n  Dropdown,\n  OverlayTrigger,\n  Tooltip,\n  Button,\n} from \"react-bootstrap\";\nimport {\n  CieSubHeader,\n  InformativeMapTitle,\n  SearchBoxInSubHeader,\n  EstimateCount,\n  EstimatedAudienceReach,\n  EstimatedAudienceReachSubTitle,\n  EstimatedAudienceDiv,\n  InformationCircleDiv,\n  InformationIcon,\n  InformationReachDropdownContent,\n  InformationReachDropdownContentDiv,\n} from \"./style\";\nimport { Popover } from \"react-tiny-popover\";\nimport SubHeaderMenuOptions from \"../SubHeaderMenuOptions/index\";\nimport Facebook from \"../../../assets/images/Facebook.png\";\nimport Audience from \"../../../assets/images/Audience.png\";\nimport Youtube from \"../../../assets/images/Youtube.png\";\ninterface Props {}\nexport default function SubHeader({}: Props): ReactElement {\n  const [hover, setHover] = useState(false);\n  const [isPopoverOpen, setIsPopoverOpen] = useState(false);\n  const updateHover = () => {\n    setHover(!hover);\n  };\n\n  return (\n    <Row>\n      <CieSubHeader>\n        <InformativeMapTitle>Informative Map</InformativeMapTitle>\n        <div>\n          <SearchBoxInSubHeader type=\"text\" placeholder=\"Search\" />\n        </div>\n        <Popover\n          isOpen={isPopoverOpen}\n          positions={[\"bottom\", \"left\"]} // if you'd like, you can limit the positions\n          padding={10} // adjust padding here!\n          reposition={false} // prevents automatic readjustment of content position that keeps your popover content within its parent's bounds\n          onClickOutside={(): any => setIsPopoverOpen(false)} // handle click events outside of the popover/target here!\n          content={\n            <InformationReachDropdownContent>\n              <InformationReachDropdownContentDiv>\n                <div>\n                  {/* <Facebook /> */}\n                  Facebook\n                </div>\n                <div>10000</div>\n              </InformationReachDropdownContentDiv>\n              <InformationReachDropdownContentDiv>\n                <div>Youtube</div>\n                <div>10000</div>\n              </InformationReachDropdownContentDiv>\n              <InformationReachDropdownContentDiv>\n                <div>Display</div>\n                <div>10000</div>\n              </InformationReachDropdownContentDiv>\n            </InformationReachDropdownContent>\n          }\n        >\n          <EstimateCount>\n            <Row>\n              <Col md={6}>\n                <EstimatedAudienceDiv>\n                  <EstimatedAudienceReach>Estimated</EstimatedAudienceReach>\n                  <EstimatedAudienceReachSubTitle>\n                    Audience Reach\n                  </EstimatedAudienceReachSubTitle>\n                </EstimatedAudienceDiv>\n              </Col>\n              <Col md={6}>\n                <InformationCircleDiv>\n                  <InformationIcon\n                    onMouseOver={(): any => setIsPopoverOpen(!isPopoverOpen)}\n                  ></InformationIcon>\n                </InformationCircleDiv>\n              </Col>\n            </Row>\n          </EstimateCount>\n        </Popover>\n      </CieSubHeader>\n    </Row>\n  );\n}\n","/home/ubantu/Desktop/coditation/CieScaffolding/src/components/Header/SubHeader/style.ts",[],"/home/ubantu/Desktop/coditation/CieScaffolding/src/features/login-flow/index.tsx",[],"/home/ubantu/Desktop/coditation/CieScaffolding/src/features/login-flow/login-thunks.tsx",["130"],"//import { loginStart, loginSuccess, loginFailure } from \"../login-flow\";\nimport { AnyAction, ThunkAction, ThunkDispatch } from \"@reduxjs/toolkit\";\nimport { loginStart, loginFailure, loginSuccess } from \".\";\nimport { login } from \"../../services/login-service\";\nimport { push } from \"connected-react-router\";\nexport const authenticate = (\n  loginReqObject: any\n): ThunkAction<Promise<void>, {}, {}, any> => async (\n  dispatch: ThunkDispatch<{}, {}, AnyAction>\n) => {\n  try {\n    // dispatch(loginStart());\n    const loggedInUserInfo = await login(loginReqObject);\n    if (loggedInUserInfo.type === \"error\") {\n      dispatch(loginFailure(loggedInUserInfo.error));\n    } else {\n      dispatch(loginSuccess(loggedInUserInfo));\n      dispatch(push(\"/consumer\"));\n    }\n  } catch (err) {\n    // dispatch(loginFailure(err.toString()));\n  }\n};\n","/home/ubantu/Desktop/coditation/CieScaffolding/src/features/login-flow/login-slice.tsx",["131"],"import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport loggedInUserInitialState from \"./login-initial-state\";\n\nexport const loggedInUser = createSlice({\n  name: \"loggedInUser\",\n  initialState: loggedInUserInitialState,\n  reducers: {\n    loginStart: startLoading,\n    loginSuccess: loadingSuccess,\n    loginFailure: loadingFailed,\n    resetLoginState: resetLoginState,\n  },\n});\n\nfunction startLoading(state: any) {\n  state.isLoading = true;\n}\n\nfunction loadingFailed(state: any, action: any) {\n  state.loggedInUser.error = action.payload;\n  state.isLoading = false;\n  state.error = action.payload.message ? action.payload.message : \"\";\n}\n\nfunction loadingSuccess(state: any, action: any) {\n  state.loggedInUser = action.payload;\n  state.isLoading = false;\n  state.error = null;\n}\n\nfunction resetLoginState(state: any, action: any) {\n  state.loggedInUser = loggedInUserInitialState.loggedInUser;\n  state.isLoading = false;\n  state.error = null;\n}\n","/home/ubantu/Desktop/coditation/CieScaffolding/src/services/login-service.ts",[],"/home/ubantu/Desktop/coditation/CieScaffolding/src/features/login-flow/login-initial-state.tsx",[],"/home/ubantu/Desktop/coditation/CieScaffolding/src/interceptors/axiosConfig.ts",["132"],"import axios from 'axios';\nimport Logger from '../components/Logger'\nimport store from '../redux-setup/store'\naxios.interceptors.request.use(req => {\n  Logger.log({\n    LogType:\"Network\",\n    logData:{\n      type:\"request\",\n      data:{\n        ...req\n      }\n    }\n  });\n  //store.dispatch({type:\"Logger/Log\",payload:\"store axios logger\"});\n  return req;\n});\n\naxios.interceptors.response.use(res => {\n    const data:{LogType:\"Network\",logData:any}={\n      LogType:\"Network\",\n      logData:{\n        type:\"response\"\n      }\n    }\n    if(res.data)\n    data.logData.data=res.data;\n    if(res.status)\n    data.logData.status=res.status;\n    Logger.log(data);\n    return res;\n  \n  \n    });\n  \n  export default axios;","/home/ubantu/Desktop/coditation/CieScaffolding/src/constants/app-config-constants.ts",[],{"ruleId":"133","severity":1,"message":"134","line":4,"column":8,"nodeType":"135","messageId":"136","endLine":4,"endColumn":11},{"ruleId":"133","severity":1,"message":"137","line":10,"column":10,"nodeType":"135","messageId":"136","endLine":10,"endColumn":23},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"133","severity":1,"message":"142","line":11,"column":7,"nodeType":"135","messageId":"136","endLine":11,"endColumn":14},{"ruleId":"133","severity":1,"message":"143","line":21,"column":19,"nodeType":"135","messageId":"136","endLine":21,"endColumn":27},{"ruleId":"133","severity":1,"message":"144","line":8,"column":7,"nodeType":"135","messageId":"136","endLine":8,"endColumn":15},{"ruleId":"133","severity":1,"message":"145","line":21,"column":7,"nodeType":"135","messageId":"136","endLine":21,"endColumn":20},{"ruleId":"133","severity":1,"message":"146","line":10,"column":3,"nodeType":"135","messageId":"136","endLine":10,"endColumn":15},{"ruleId":"133","severity":1,"message":"147","line":36,"column":9,"nodeType":"135","messageId":"136","endLine":36,"endColumn":16},{"ruleId":"133","severity":1,"message":"148","line":37,"column":9,"nodeType":"135","messageId":"136","endLine":37,"endColumn":15},{"ruleId":"133","severity":1,"message":"149","line":38,"column":7,"nodeType":"135","messageId":"136","endLine":38,"endColumn":15},{"ruleId":"133","severity":1,"message":"150","line":1,"column":31,"nodeType":"135","messageId":"136","endLine":1,"endColumn":39},{"ruleId":"133","severity":1,"message":"151","line":3,"column":17,"nodeType":"135","messageId":"136","endLine":3,"endColumn":25},{"ruleId":"133","severity":1,"message":"152","line":2,"column":10,"nodeType":"135","messageId":"136","endLine":2,"endColumn":19},{"ruleId":"133","severity":1,"message":"151","line":5,"column":3,"nodeType":"135","messageId":"136","endLine":5,"endColumn":11},{"ruleId":"133","severity":1,"message":"153","line":6,"column":3,"nodeType":"135","messageId":"136","endLine":6,"endColumn":17},{"ruleId":"133","severity":1,"message":"154","line":7,"column":3,"nodeType":"135","messageId":"136","endLine":7,"endColumn":10},{"ruleId":"133","severity":1,"message":"155","line":8,"column":3,"nodeType":"135","messageId":"136","endLine":8,"endColumn":9},{"ruleId":"133","severity":1,"message":"156","line":24,"column":8,"nodeType":"135","messageId":"136","endLine":24,"endColumn":28},{"ruleId":"133","severity":1,"message":"157","line":25,"column":8,"nodeType":"135","messageId":"136","endLine":25,"endColumn":16},{"ruleId":"133","severity":1,"message":"158","line":26,"column":8,"nodeType":"135","messageId":"136","endLine":26,"endColumn":16},{"ruleId":"133","severity":1,"message":"159","line":27,"column":8,"nodeType":"135","messageId":"136","endLine":27,"endColumn":15},{"ruleId":"160","severity":1,"message":"161","line":29,"column":35,"nodeType":"162","messageId":"163","endLine":29,"endColumn":44},{"ruleId":"133","severity":1,"message":"164","line":32,"column":9,"nodeType":"135","messageId":"136","endLine":32,"endColumn":20},{"ruleId":"133","severity":1,"message":"165","line":3,"column":10,"nodeType":"135","messageId":"136","endLine":3,"endColumn":20},{"ruleId":"133","severity":1,"message":"166","line":1,"column":23,"nodeType":"135","messageId":"136","endLine":1,"endColumn":36},{"ruleId":"133","severity":1,"message":"167","line":3,"column":8,"nodeType":"135","messageId":"136","endLine":3,"endColumn":13},"@typescript-eslint/no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","'BrowserRouter' is defined but never used.","no-native-reassign",["168"],"no-negated-in-lhs",["169"],"'Tlogger' is assigned a value but never used.","'response' is assigned a value but never used.","'divStyle' is assigned a value but never used.","'clusterStyles' is assigned a value but never used.","'CustomButton' is defined but never used.","'history' is assigned a value but never used.","'Logger' is assigned a value but never used.","'location' is assigned a value but never used.","'useState' is defined but never used.","'Dropdown' is defined but never used.","'container' is defined but never used.","'OverlayTrigger' is defined but never used.","'Tooltip' is defined but never used.","'Button' is defined but never used.","'SubHeaderMenuOptions' is defined but never used.","'Facebook' is defined but never used.","'Audience' is defined but never used.","'Youtube' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'updateHover' is assigned a value but never used.","'loginStart' is defined but never used.","'PayloadAction' is defined but never used.","'store' is defined but never used.","no-global-assign","no-unsafe-negation"]