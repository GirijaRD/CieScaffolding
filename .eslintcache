[{"/home/siddhi/ADA-New-UI/cie-ui/src/index.tsx":"1","/home/siddhi/ADA-New-UI/cie-ui/src/components/Routes/PrivateRoute.tsx":"2","/home/siddhi/ADA-New-UI/cie-ui/src/redux-setup/history.ts":"3","/home/siddhi/ADA-New-UI/cie-ui/src/redux-setup/rootReducer.ts":"4","/home/siddhi/ADA-New-UI/cie-ui/src/redux-middlewares-enhancers/token-middleware.ts":"5","/home/siddhi/ADA-New-UI/cie-ui/src/features/login-flow/index.tsx":"6","/home/siddhi/ADA-New-UI/cie-ui/src/features/login-flow/login-thunks.tsx":"7","/home/siddhi/ADA-New-UI/cie-ui/src/features/login-flow/login-slice.tsx":"8","/home/siddhi/ADA-New-UI/cie-ui/src/components/Logger.tsx":"9","/home/siddhi/ADA-New-UI/cie-ui/src/services/login-service.ts":"10","/home/siddhi/ADA-New-UI/cie-ui/src/serviceWorker.ts":"11","/home/siddhi/ADA-New-UI/cie-ui/src/interceptors/axiosConfig.ts":"12","/home/siddhi/ADA-New-UI/cie-ui/src/constants/app-config-constants.ts":"13","/home/siddhi/ADA-New-UI/cie-ui/src/features/login-flow/login-initial-state.tsx":"14","/home/siddhi/ADA-New-UI/cie-ui/src/components/Header/MainHeader/index.tsx":"15","/home/siddhi/ADA-New-UI/cie-ui/src/components/Header/MainHeader/styles.ts":"16","/home/siddhi/ADA-New-UI/cie-ui/src/components/Header/SubHeader/style.ts":"17"},{"size":1066,"mtime":1608277661744,"results":"18","hashOfConfig":"19"},{"size":678,"mtime":1608278140392,"results":"20","hashOfConfig":"19"},{"size":105,"mtime":1607332107178,"results":"21","hashOfConfig":"19"},{"size":300,"mtime":1607422530100,"results":"22","hashOfConfig":"19"},{"size":519,"mtime":1607422530096,"results":"23","hashOfConfig":"19"},{"size":238,"mtime":1607422530096,"results":"24","hashOfConfig":"19"},{"size":988,"mtime":1607422530112,"results":"25","hashOfConfig":"19"},{"size":960,"mtime":1606391239900,"results":"26","hashOfConfig":"19"},{"size":2661,"mtime":1607422530096,"results":"27","hashOfConfig":"19"},{"size":385,"mtime":1607422530100,"results":"28","hashOfConfig":"19"},{"size":5424,"mtime":1606381638210,"results":"29","hashOfConfig":"19"},{"size":712,"mtime":1607422530096,"results":"30","hashOfConfig":"19"},{"size":133,"mtime":1606460638177,"results":"31","hashOfConfig":"19"},{"size":184,"mtime":1607332107174,"results":"32","hashOfConfig":"19"},{"size":1468,"mtime":1608297214703,"results":"33","hashOfConfig":"19"},{"size":2100,"mtime":1608295617350,"results":"34","hashOfConfig":"19"},{"size":107,"mtime":1608293008503,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},"1xegda3",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"50","messages":"51","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"39"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/siddhi/ADA-New-UI/cie-ui/src/index.tsx",["75","76","77"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nimport store from \"./redux-setup/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport Login from \"./pages/login\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport { ConnectedRouter as Router } from \"connected-react-router\";\r\nimport history from \"./redux-setup/history\";\r\nimport PrivateRoute from \"./components/Routes/PrivateRoute\";\r\nimport Logger from \"./components/Logger\";\r\nimport MainHeader from \"./components/Header/MainHeader\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <Router history={history}>\r\n        <PrivateRoute path=\"/\" component={\"Home\"} />\r\n        <Logger>\r\n          <Route exact path=\"/header\">\r\n            {/* <Login /> */}\r\n            <MainHeader />\r\n          </Route>\r\n        </Logger>\r\n      </Router>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();\r\n",["78","79"],"/home/siddhi/ADA-New-UI/cie-ui/src/components/Routes/PrivateRoute.tsx",[],"/home/siddhi/ADA-New-UI/cie-ui/src/redux-setup/history.ts",[],"/home/siddhi/ADA-New-UI/cie-ui/src/redux-setup/rootReducer.ts",[],"/home/siddhi/ADA-New-UI/cie-ui/src/redux-middlewares-enhancers/token-middleware.ts",[],"/home/siddhi/ADA-New-UI/cie-ui/src/features/login-flow/index.tsx",[],"/home/siddhi/ADA-New-UI/cie-ui/src/features/login-flow/login-thunks.tsx",["80"],"/home/siddhi/ADA-New-UI/cie-ui/src/features/login-flow/login-slice.tsx",["81"],"import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport loggedInUserInitialState from \"./login-initial-state\";\n\nexport const loggedInUser = createSlice({\n  name: \"loggedInUser\",\n  initialState: loggedInUserInitialState,\n  reducers: {\n    loginStart: startLoading,\n    loginSuccess: loadingSuccess,\n    loginFailure: loadingFailed,\n    resetLoginState: resetLoginState,\n  },\n});\n\nfunction startLoading(state: any) {\n  state.isLoading = true;\n}\n\nfunction loadingFailed(state: any, action: any) {\n  state.loggedInUser.error = action.payload;\n  state.isLoading = false;\n  state.error = action.payload.message ? action.payload.message : \"\";\n}\n\nfunction loadingSuccess(state: any, action: any) {\n  state.loggedInUser = action.payload;\n  state.isLoading = false;\n  state.error = null;\n}\n\nfunction resetLoginState(state: any, action: any) {\n  state.loggedInUser = loggedInUserInitialState.loggedInUser;\n  state.isLoading = false;\n  state.error = null;\n}\n",["82","83"],"/home/siddhi/ADA-New-UI/cie-ui/src/components/Logger.tsx",["84"],"import React from 'react';\nimport axios from 'axios';\nconst env=process.env.REACT_ENV;\nconst Context= React.createContext({default:null,log:console.log});\nexport { Context};\nclass Logger extends React.Component<any,{}>{\n    constructor(props:any){\n        super(props)\n        this.state={\n            data:{}\n        }\n    }\n    componentDidMount(){\n       \n    }\n    componentDidUpdate(){\n       \n    }\n    static writeToServer=async(config: any)=>{\n        try{\n            const response = await axios(config);\n        }catch(e){\n            return {error:e.message};\n        }\n        return true;\n    }\n\n    static processReduxAction=(action:any)=>{\n        let data;\n        switch(action.type){\n            default:\n                data=action;\n        }\n        return {level:\"info\",data};\n    }\n    static processError=(error:any)=>{\n        let data=error;\n        return {level:\"error\",data};\n    }\n\n    static processNetwork=(networkConfig:any)=>{\n        if(networkConfig.type === \"request\")\n            return networkConfig;\n        const data:any= {\n            url:networkConfig.url,\n            status:networkConfig.status,\n        }\n        if(networkConfig.data)\n            data.data=networkConfig.data;\n        if(networkConfig.error)\n            data.error=networkConfig.error;\n        return {level:\"info\",data};\n    }\n    static processData=(data:any)=>{\n        switch(data.LogType){\n            case \"ReduxAction\":\n                return Logger.processReduxAction(data.logData);\n            case \"Network\":\n                return Logger.processNetwork(data.logData);\n            case \"Error\":\n            default:\n                return Logger.processError(data.logData);\n        }\n    }\n     \n    static writeToConsole=(data:{level?:string,data:any})=>{\n        let  level:\"error\"|\"warn\"|\"info\"|\"log\";\n        level=data.level as unknown as typeof level;\n        level=level || \"log\";\n        console.groupCollapsed();\n        console[level](data.data);\n        console.groupEnd();\n    }\n    static log=(data:any)=>{\n        if(env===\"production\")\n            return;\n        const processedData=Logger.processData(data);\n        Logger.writeToConsole(processedData);\n    }\n    \n    render(){\n        const{children,...directProps}=this.props;\n        return(\n            <Context.Consumer>\n                {(ContextProps)=>{\n                    const props={...ContextProps,...directProps,log:Logger.log};\n                    return(\n                    <Context.Provider value={props}>{children}</Context.Provider>\n                    );\n                }}\n            </Context.Consumer>\n        );\n    }\n}\n\nexport default  Logger","/home/siddhi/ADA-New-UI/cie-ui/src/services/login-service.ts",[],"/home/siddhi/ADA-New-UI/cie-ui/src/serviceWorker.ts",[],"/home/siddhi/ADA-New-UI/cie-ui/src/interceptors/axiosConfig.ts",["85"],"/home/siddhi/ADA-New-UI/cie-ui/src/constants/app-config-constants.ts",[],"/home/siddhi/ADA-New-UI/cie-ui/src/features/login-flow/login-initial-state.tsx",[],"/home/siddhi/ADA-New-UI/cie-ui/src/components/Header/MainHeader/index.tsx",["86","87","88","89"],"/home/siddhi/ADA-New-UI/cie-ui/src/components/Header/MainHeader/styles.ts",[],"/home/siddhi/ADA-New-UI/cie-ui/src/components/Header/SubHeader/style.ts",[],{"ruleId":"90","severity":1,"message":"91","line":4,"column":8,"nodeType":"92","messageId":"93","endLine":4,"endColumn":11},{"ruleId":"90","severity":1,"message":"94","line":9,"column":8,"nodeType":"92","messageId":"93","endLine":9,"endColumn":13},{"ruleId":"90","severity":1,"message":"95","line":10,"column":10,"nodeType":"92","messageId":"93","endLine":10,"endColumn":23},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":null,"fatal":true,"severity":2,"message":"100","line":17,"column":0},{"ruleId":"90","severity":1,"message":"101","line":1,"column":23,"nodeType":"92","messageId":"93","endLine":1,"endColumn":36},{"ruleId":"96","replacedBy":"102"},{"ruleId":"98","replacedBy":"103"},{"ruleId":"90","severity":1,"message":"104","line":21,"column":19,"nodeType":"92","messageId":"93","endLine":21,"endColumn":27},{"ruleId":"90","severity":1,"message":"105","line":3,"column":8,"nodeType":"92","messageId":"93","endLine":3,"endColumn":13},{"ruleId":"90","severity":1,"message":"106","line":2,"column":10,"nodeType":"92","messageId":"93","endLine":2,"endColumn":19},{"ruleId":"90","severity":1,"message":"107","line":3,"column":10,"nodeType":"92","messageId":"93","endLine":3,"endColumn":17},{"ruleId":"90","severity":1,"message":"108","line":5,"column":17,"nodeType":"92","messageId":"93","endLine":5,"endColumn":25},{"ruleId":"109","severity":1,"message":"110","line":20,"column":36,"nodeType":"111","messageId":"112","endLine":20,"endColumn":45},"@typescript-eslint/no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","'Login' is defined but never used.","'BrowserRouter' is defined but never used.","no-native-reassign",["113"],"no-negated-in-lhs",["114"],"Parsing error: Merge conflict marker encountered.","'PayloadAction' is defined but never used.",["113"],["114"],"'response' is assigned a value but never used.","'store' is defined but never used.","'Container' is defined but never used.","'connect' is defined but never used.","'Dropdown' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-global-assign","no-unsafe-negation"]